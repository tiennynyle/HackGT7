{"ast":null,"code":"import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice\n}) => {\n  const {\n    selectItems\n  } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    getIntent(transcript).then(res => res.json()).then(res => {\n      setTimeout(() => {\n        if (transcript === \"show me the menu\") {\n          getItems().then(res => res.json()).then(res => selectItems(res.Result));\n          resetVoice(\"Here is our Menu\");\n          resetTranscript();\n        } else if (transcript.includes(\"milk tea\") || transcript.includes(\"oolong\")) {\n          const category = transcript.includes(\"milk tea\") ? \"Milk Tea\" : \"Oolong\";\n          getItems().then(res => res.json()).then(res => {\n            console.log(res);\n            const result = res.Result.filter(r => r.Name.includes(category));\n            selectItems(result);\n          });\n          resetVoice(`Here is our ${category}`);\n          resetTranscript();\n        } else if (transcript.startsWith(\"I want to order\")) {\n          const name = transcript.substr(\"I want to order\".length);\n          console.log(name);\n          resetVoice(\"I am listening\");\n        }\n      }, 2000);\n    });\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};","map":{"version":3,"sources":["/Users/thotra/Desktop/hack-gt/src/data/useVoiceCommands.js"],"names":["getItems","getIntent","MessageContext","React","useVoiceCommands","transcript","resetTranscript","resetVoice","selectItems","useContext","useEffect","then","res","json","setTimeout","Result","includes","category","console","log","result","filter","r","Name","startsWith","name","substr","length"],"mappings":"AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAoC,aAApC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,UAD+B;AAE/BC,EAAAA,eAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAI1B;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,KAAK,CAACM,UAAN,CAAiBP,cAAjB,CAAxB;AACAC,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpBT,IAAAA,SAAS,CAACI,UAAD,CAAT,CAAsBM,IAAtB,CAA4BC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAApC,EAAgDF,IAAhD,CAAsDC,GAAD,IAAS;AAC5DE,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIT,UAAU,KAAK,kBAAnB,EAAuC;AACrCL,UAAAA,QAAQ,GACLW,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAASJ,WAAW,CAACI,GAAG,CAACG,MAAL,CAF5B;AAGAR,UAAAA,UAAU,CAAC,kBAAD,CAAV;AACAD,UAAAA,eAAe;AAChB,SAND,MAMO,IACLD,UAAU,CAACW,QAAX,CAAoB,UAApB,KACAX,UAAU,CAACW,QAAX,CAAoB,QAApB,CAFK,EAGL;AACA,gBAAMC,QAAQ,GAAGZ,UAAU,CAACW,QAAX,CAAoB,UAApB,IACb,UADa,GAEb,QAFJ;AAGAhB,UAAAA,QAAQ,GACLW,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbM,YAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA,kBAAMQ,MAAM,GAAGR,GAAG,CAACG,MAAJ,CAAWM,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOP,QAAP,CAAgBC,QAAhB,CAAzB,CAAf;AACAT,YAAAA,WAAW,CAACY,MAAD,CAAX;AACD,WANH;AAOAb,UAAAA,UAAU,CAAE,eAAcU,QAAS,EAAzB,CAAV;AAEAX,UAAAA,eAAe;AAChB,SAjBM,MAiBA,IAAID,UAAU,CAACmB,UAAX,CAAsB,iBAAtB,CAAJ,EAA8C;AACnD,gBAAMC,IAAI,GAAGpB,UAAU,CAACqB,MAAX,CAAkB,kBAAkBC,MAApC,CAAb;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACAlB,UAAAA,UAAU,CAAC,gBAAD,CAAV;AACD;AACF,OA7BS,EA6BP,IA7BO,CAAV;AA8BD,KA/BD;AAiCD,GAlCD,EAkCG,CAACF,UAAD,EAAaE,UAAb,EAAyBD,eAAzB,EAA0CE,WAA1C,CAlCH;AAmCD,CAzCM","sourcesContent":["import { getItems , getIntent} from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\n\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice,\n}) => {\n  const { selectItems } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    getIntent(transcript).then((res) => res.json()).then((res) => {\n      setTimeout(() => {\n        if (transcript === \"show me the menu\") {\n          getItems()\n            .then((res) => res.json())\n            .then((res) => selectItems(res.Result));\n          resetVoice(\"Here is our Menu\");\n          resetTranscript();\n        } else if (\n          transcript.includes(\"milk tea\") ||\n          transcript.includes(\"oolong\")\n        ) {\n          const category = transcript.includes(\"milk tea\")\n            ? \"Milk Tea\"\n            : \"Oolong\";\n          getItems()\n            .then((res) => res.json())\n            .then((res) => {\n              console.log(res);\n              const result = res.Result.filter((r) => r.Name.includes(category));\n              selectItems(result);\n            });\n          resetVoice(`Here is our ${category}`);\n  \n          resetTranscript();\n        } else if (transcript.startsWith(\"I want to order\")) {\n          const name = transcript.substr(\"I want to order\".length);\n          console.log(name);\n          resetVoice(\"I am listening\");\n        }\n      }, 2000);\n    })\n\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};\n"]},"metadata":{},"sourceType":"module"}