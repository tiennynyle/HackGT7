{"ast":null,"code":"import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\nconst categories = [\"Milk Tea\", \"Chocolate\", \"Oolong\"];\n\nconst getCategory = intent => {\n  for (let category of categories) {\n    if (category.toLowerCase() === intent) {\n      return category;\n    }\n  }\n\n  return null;\n};\n\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice\n}) => {\n  const {\n    selectItems,\n    addItemOrder,\n    orders,\n    setTotalPrice,\n    removeOrder\n  } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    if (transcript === \"\") return;\n    setTimeout(() => {\n      getIntent(transcript).then(res => res.json()).then(res => {\n        const {\n          intent\n        } = res;\n\n        if (intent === \"menu\") {\n          getItems().then(res => res.json()).then(res => {\n            selectItems(res.Result);\n            resetVoice(\"Here is our Menu\");\n            resetTranscript();\n            setTotalPrice(false);\n          });\n        } else if (getCategory(intent)) {\n          const category = getCategory(intent);\n          getItems().then(res => res.json()).then(res => {\n            const result = res.Result.filter(r => r.Name.includes(category));\n            selectItems(result);\n            resetVoice(`Here is our ${category}`);\n            resetTranscript();\n            setTotalPrice(false);\n          });\n        } else if (intent.includes(\"order_\")) {\n          const name = intent.substr(\"order_\".length).replace(/#|_/g, \" \");\n          getItems().then(res => res.json()).then(res => {\n            for (let r of res.Result) {\n              if (r.Name.toLowerCase().trim() === name.trim()) {\n                addItemOrder(r);\n                break;\n              }\n            }\n\n            selectItems([]);\n            resetVoice(\"Ok, I added your order.\");\n            resetTranscript();\n          });\n        } else if (intent.includes(\"show order\")) {\n          console.log(\"OK bish\");\n          console.log(orders);\n          selectItems(orders);\n          setTotalPrice(true);\n          resetTranscript(); // resetVoice(\"Here is your summary of your orders\");\n        } else if (intent.includes(\"remove_\")) {\n          const name = intent.substr(\"remove_\".length).replace(/#|_/g, \" \");\n          removeOrder(name);\n          setTotalPrice(false);\n          resetTranscript();\n          resetVoice(\"Ok I removed your order for \" + name);\n        } else if (intent.includes(\"pay\")) {\n          console.log(orders);\n          const items = [];\n\n          for (let order of orders) {\n            items.push({\n              ItemId: order.ItemVariations[0].ItemId\n            });\n          }\n        }\n      });\n    }, 5000);\n  }, [addItemOrder, orders, removeOrder, resetTranscript, resetVoice, selectItems, setTotalPrice, transcript]);\n};","map":{"version":3,"sources":["/Users/thotra/Desktop/hack-gt/src/data/useVoiceCommands.js"],"names":["getItems","getIntent","MessageContext","React","categories","getCategory","intent","category","toLowerCase","useVoiceCommands","transcript","resetTranscript","resetVoice","selectItems","addItemOrder","orders","setTotalPrice","removeOrder","useContext","useEffect","setTimeout","then","res","json","Result","result","filter","r","Name","includes","name","substr","length","replace","trim","console","log","items","order","push","ItemId","ItemVariations"],"mappings":"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","sourcesContent":["import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\n\nconst categories = [\"Milk Tea\", \"Chocolate\", \"Oolong\"];\nconst getCategory = (intent) => {\n  for (let category of categories) {\n    if (category.toLowerCase() === intent) {\n      return category;\n    }\n  }\n  return null;\n};\n\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice,\n}) => {\n  const {\n    selectItems,\n    addItemOrder,\n    orders,\n    setTotalPrice,\n    removeOrder,\n  } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    if (transcript === \"\") return;\n    setTimeout(() => {\n      getIntent(transcript)\n        .then((res) => res.json())\n        .then((res) => {\n          const { intent } = res;\n          if (intent === \"menu\") {\n            getItems()\n              .then((res) => res.json())\n              .then((res) => {\n                selectItems(res.Result);\n                resetVoice(\"Here is our Menu\");\n                resetTranscript();\n                setTotalPrice(false);\n              });\n          } else if (getCategory(intent)) {\n            const category = getCategory(intent);\n            getItems()\n              .then((res) => res.json())\n              .then((res) => {\n                const result = res.Result.filter((r) =>\n                  r.Name.includes(category)\n                );\n                selectItems(result);\n                resetVoice(`Here is our ${category}`);\n                resetTranscript();\n                setTotalPrice(false);\n              });\n          } else if (intent.includes(\"order_\")) {\n            const name = intent.substr(\"order_\".length).replace(/#|_/g, \" \");\n            getItems()\n              .then((res) => res.json())\n              .then((res) => {\n                for (let r of res.Result) {\n                  if (r.Name.toLowerCase().trim() === name.trim()) {\n                    addItemOrder(r);\n                    break;\n                  }\n                }\n                selectItems([]);\n                resetVoice(\"Ok, I added your order.\");\n                resetTranscript();\n              });\n          } else if (intent.includes(\"show order\")) {\n            console.log(\"OK bish\");\n            console.log(orders);\n            selectItems(orders);\n            setTotalPrice(true);\n            resetTranscript();\n            // resetVoice(\"Here is your summary of your orders\");\n          } else if (intent.includes(\"remove_\")) {\n            const name = intent.substr(\"remove_\".length).replace(/#|_/g, \" \");\n            removeOrder(name);\n            setTotalPrice(false);\n            resetTranscript();\n            resetVoice(\"Ok I removed your order for \" + name);\n          } else if (intent.includes(\"pay\")) {\n            console.log(orders);\n            const items = [];\n            for (let order of orders) {\n              items.push({\n                ItemId: order.ItemVariations[0].ItemId,\n                \n              });\n            }\n          }\n        });\n    }, 5000);\n  }, [\n    addItemOrder,\n    orders,\n    removeOrder,\n    resetTranscript,\n    resetVoice,\n    selectItems,\n    setTotalPrice,\n    transcript,\n  ]);\n};\n"]},"metadata":{},"sourceType":"module"}