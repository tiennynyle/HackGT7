{"ast":null,"code":"import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice\n}) => {\n  const {\n    selectItems\n  } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    getIntent(transcript).then(res => res.json()).then(res => {\n      const {\n        intent\n      } = res;\n      console.log(res); // setTimeout(() => {\n      //   if (transcript === \"show me the menu\") {\n      //     getItems()\n      //       .then((res) => res.json())\n      //       .then((res) => selectItems(res.Result));\n      //     resetVoice(\"Here is our Menu\");\n      //     resetTranscript();\n      //   } else if (\n      //     transcript.includes(\"milk tea\") ||\n      //     transcript.includes(\"oolong\")\n      //   ) {\n      //     const category = transcript.includes(\"milk tea\")\n      //       ? \"Milk Tea\"\n      //       : \"Oolong\";\n      //     getItems()\n      //       .then((res) => res.json())\n      //       .then((res) => {\n      //         console.log(res);\n      //         const result = res.Result.filter((r) =>\n      //           r.Name.includes(category)\n      //         );\n      //         selectItems(result);\n      //       });\n      //     resetVoice(`Here is our ${category}`);\n      //     resetTranscript();\n      //   } else if (transcript.startsWith(\"I want to order\")) {\n      //     const name = transcript.substr(\"I want to order\".length);\n      //     console.log(name);\n      //     resetVoice(\"I am listening\");\n      //   }\n      // }, 2000);\n    });\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};","map":{"version":3,"sources":["/Users/thotra/Desktop/hack-gt/src/data/useVoiceCommands.js"],"names":["getItems","getIntent","MessageContext","React","useVoiceCommands","transcript","resetTranscript","resetVoice","selectItems","useContext","useEffect","then","res","json","intent","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,UAD+B;AAE/BC,EAAAA,eAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAI1B;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,KAAK,CAACM,UAAN,CAAiBP,cAAjB,CAAxB;AACAC,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpBT,IAAAA,SAAS,CAACI,UAAD,CAAT,CACGM,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,YAAM;AAAEE,QAAAA;AAAF,UAAaF,GAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAFa,CAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KArCH;AAsCD,GAvCD,EAuCG,CAACP,UAAD,EAAaE,UAAb,EAAyBD,eAAzB,EAA0CE,WAA1C,CAvCH;AAwCD,CA9CM","sourcesContent":["import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\n\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice,\n}) => {\n  const { selectItems } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    getIntent(transcript)\n      .then((res) => res.json())\n      .then((res) => {\n        const { intent } = res;\n        console.log(res);\n        // setTimeout(() => {\n        //   if (transcript === \"show me the menu\") {\n        //     getItems()\n        //       .then((res) => res.json())\n        //       .then((res) => selectItems(res.Result));\n        //     resetVoice(\"Here is our Menu\");\n        //     resetTranscript();\n        //   } else if (\n        //     transcript.includes(\"milk tea\") ||\n        //     transcript.includes(\"oolong\")\n        //   ) {\n        //     const category = transcript.includes(\"milk tea\")\n        //       ? \"Milk Tea\"\n        //       : \"Oolong\";\n        //     getItems()\n        //       .then((res) => res.json())\n        //       .then((res) => {\n        //         console.log(res);\n        //         const result = res.Result.filter((r) =>\n        //           r.Name.includes(category)\n        //         );\n        //         selectItems(result);\n        //       });\n        //     resetVoice(`Here is our ${category}`);\n\n        //     resetTranscript();\n        //   } else if (transcript.startsWith(\"I want to order\")) {\n        //     const name = transcript.substr(\"I want to order\".length);\n        //     console.log(name);\n        //     resetVoice(\"I am listening\");\n        //   }\n        // }, 2000);\n      });\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};\n"]},"metadata":{},"sourceType":"module"}