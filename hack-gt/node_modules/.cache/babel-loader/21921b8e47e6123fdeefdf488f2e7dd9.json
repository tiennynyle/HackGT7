{"ast":null,"code":"var _jsxFileName = \"/Users/thotra/Desktop/hack-gt/src/components/ShowItems.jsx\";\nimport React from \"react\";\nimport { MessageContext } from \"../Context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nexport const ShowItems = () => {\n  const {\n    items,\n    showTotalPrice\n  } = React.useContext(MessageContext);\n  const classes = useStyles();\n  if (!items || items.length === 0) return null;\n\n  const getTotalPrices = () => {\n    let totalPrice = 0;\n\n    for (let item of items) total;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, `About ${items.length} results`), showTotalPrice === true && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, `Total Price of your orders : 12`), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Price\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, items.map((item, idx) => /*#__PURE__*/React.createElement(TableRow, {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: `#${item.DisplayColor}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, item.Name)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, item.Description), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, item.RetailPrice)))))));\n};","map":{"version":3,"sources":["/Users/thotra/Desktop/hack-gt/src/components/ShowItems.jsx"],"names":["React","MessageContext","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","ShowItems","items","showTotalPrice","useContext","classes","length","getTotalPrices","totalPrice","item","total","map","idx","color","DisplayColor","Name","Description","RetailPrice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA4Bf,KAAK,CAACgB,UAAN,CAAiBf,cAAjB,CAAlC;AACA,QAAMgB,OAAO,GAAGP,SAAS,EAAzB;AACA,MAAI,CAACI,KAAD,IAAUA,KAAK,CAACI,MAAN,KAAiB,CAA/B,EAAkC,OAAO,IAAP;;AAGlC,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIC,UAAU,GAAG,CAAjB;;AACA,SAAK,IAAIC,IAAT,IAAiBP,KAAjB,EACAQ,KAAK;AACN,GAJD;;AAMA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,SAAQR,KAAK,CAACI,MAAO,UAA5B,CADF,EAEGH,cAAc,KAAK,IAAnB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,iCAAP,CAHJ,eAKE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEN,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEQ,OAAO,CAACN,KAA1B;AAAiC,kBAAW,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CADF,eAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACS,GAAN,CAAU,CAACF,IAAD,EAAOG,GAAP,kBACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,IAAGJ,IAAI,CAACK,YAAa;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACM,IADR,CADF,CADF,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYN,IAAI,CAACO,WAAjB,CAPF,eAQE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYP,IAAI,CAACQ,WAAjB,CARF,CADD,CADH,CARF,CADF,CALF,CADF;AAiCD,CA7CM","sourcesContent":["import React from \"react\";\nimport { MessageContext } from \"../Context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport const ShowItems = () => {\n  const { items, showTotalPrice } = React.useContext(MessageContext);\n  const classes = useStyles();\n  if (!items || items.length === 0) return null;\n\n\n  const getTotalPrices = () => {\n    let totalPrice = 0;\n    for (let item of items)\n    total\n  }\n\n  return (\n    <>\n      <div>{`About ${items.length} results`}</div>\n      {showTotalPrice === true && (\n        <div>{`Total Price of your orders : 12`}</div>\n      )}\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Price</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.map((item, idx) => (\n              <TableRow key={idx}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <span style={{ color: `#${item.DisplayColor}` }}>\n                    {item.Name}\n                  </span>\n                </TableCell>\n\n                <TableCell>{item.Description}</TableCell>\n                <TableCell>{item.RetailPrice}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}