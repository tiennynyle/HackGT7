{"ast":null,"code":"import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\nconst categories = [\"Milk Tea\", \"Chocolate\", \"Oolong\"];\n\nconst getCategory = intent => {\n  for (let category of categories) {\n    if (category.toLowerCase() === intent) {\n      return category;\n    }\n  }\n\n  return null;\n};\n\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice\n}) => {\n  const {\n    selectItems,\n    addItemOrder\n  } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    if (transcript === \"\") return;\n    getIntent(transcript).then(res => res.json()).then(res => {\n      const {\n        intent\n      } = res;\n      console.log(intent);\n\n      if (intent === \"menu\") {\n        getItems().then(res => res.json()).then(res => {\n          selectItems(res.Result);\n          resetVoice(\"Here is our Menu\");\n          resetTranscript();\n        });\n      } else if (getCategory(intent)) {\n        const category = getCategory(intent);\n        getItems().then(res => res.json()).then(res => {\n          const result = res.Result.filter(r => r.Name.includes(category));\n          selectItems(result);\n          resetVoice(`Here is our ${category}`);\n          resetTranscript();\n        });\n      } else if (intent === \"order\") {\n        const name = transcript.substr(\"I want to order\".length);\n        getItems().then(res => res.json()).then(res => {\n          const result = res.Result.filter(r => r.Name.toLowerCase().includes(name));\n          addItemOrder(result[0]);\n        });\n        resetVoice(\"I am listening\");\n        resetTranscript();\n      }\n    });\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};","map":{"version":3,"sources":["/Users/thotra/Desktop/hack-gt/src/data/useVoiceCommands.js"],"names":["getItems","getIntent","MessageContext","React","categories","getCategory","intent","category","toLowerCase","useVoiceCommands","transcript","resetTranscript","resetVoice","selectItems","addItemOrder","useContext","useEffect","then","res","json","console","log","Result","result","filter","r","Name","includes","name","substr","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CAAnB;;AACA,MAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9B,OAAK,IAAIC,QAAT,IAAqBH,UAArB,EAAiC;AAC/B,QAAIG,QAAQ,CAACC,WAAT,OAA2BF,MAA/B,EAAuC;AACrC,aAAOC,QAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAPD;;AASA,OAAO,MAAME,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,UAD+B;AAE/BC,EAAAA,eAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAI1B;AACJ,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAgCX,KAAK,CAACY,UAAN,CAAiBb,cAAjB,CAAtC;AACAC,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAIN,UAAU,KAAK,EAAnB,EAAuB;AACvBT,IAAAA,SAAS,CAACS,UAAD,CAAT,CACGO,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,YAAM;AAAEZ,QAAAA;AAAF,UAAaY,GAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;;AACA,UAAIA,MAAM,KAAK,MAAf,EAAuB;AACrBN,QAAAA,QAAQ,GACLiB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbL,UAAAA,WAAW,CAACK,GAAG,CAACI,MAAL,CAAX;AACAV,UAAAA,UAAU,CAAC,kBAAD,CAAV;AACAD,UAAAA,eAAe;AAChB,SANH;AAOD,OARD,MAQO,IAAIN,WAAW,CAACC,MAAD,CAAf,EAAyB;AAC9B,cAAMC,QAAQ,GAAGF,WAAW,CAACC,MAAD,CAA5B;AACAN,QAAAA,QAAQ,GACLiB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,gBAAMK,MAAM,GAAGL,GAAG,CAACI,MAAJ,CAAWE,MAAX,CAAmBC,CAAD,IAC/BA,CAAC,CAACC,IAAF,CAAOC,QAAP,CAAgBpB,QAAhB,CADa,CAAf;AAGAM,UAAAA,WAAW,CAACU,MAAD,CAAX;AACAX,UAAAA,UAAU,CAAE,eAAcL,QAAS,EAAzB,CAAV;AACAI,UAAAA,eAAe;AAChB,SATH;AAUD,OAZM,MAYA,IAAIL,MAAM,KAAK,OAAf,EAAwB;AAC7B,cAAMsB,IAAI,GAAGlB,UAAU,CAACmB,MAAX,CAAkB,kBAAkBC,MAApC,CAAb;AACA9B,QAAAA,QAAQ,GACLiB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,gBAAMK,MAAM,GAAGL,GAAG,CAACI,MAAJ,CAAWE,MAAX,CAAmBC,CAAD,IAC/BA,CAAC,CAACC,IAAF,CAAOlB,WAAP,GAAqBmB,QAArB,CAA8BC,IAA9B,CADa,CAAf;AAGAd,UAAAA,YAAY,CAACS,MAAM,CAAC,CAAD,CAAP,CAAZ;AACD,SAPH;AAQAX,QAAAA,UAAU,CAAC,gBAAD,CAAV;AACAD,QAAAA,eAAe;AAChB;AACF,KAtCH;AAuCD,GAzCD,EAyCG,CAACD,UAAD,EAAaE,UAAb,EAAyBD,eAAzB,EAA0CE,WAA1C,CAzCH;AA0CD,CAhDM","sourcesContent":["import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\n\nconst categories = [\"Milk Tea\", \"Chocolate\", \"Oolong\"];\nconst getCategory = (intent) => {\n  for (let category of categories) {\n    if (category.toLowerCase() === intent) {\n      return category;\n    }\n  }\n  return null;\n};\n\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice,\n}) => {\n  const { selectItems, addItemOrder } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    if (transcript === \"\") return;\n    getIntent(transcript)\n      .then((res) => res.json())\n      .then((res) => {\n        const { intent } = res;\n        console.log(intent);\n        if (intent === \"menu\") {\n          getItems()\n            .then((res) => res.json())\n            .then((res) => {\n              selectItems(res.Result);\n              resetVoice(\"Here is our Menu\");\n              resetTranscript();\n            });\n        } else if (getCategory(intent)) {\n          const category = getCategory(intent);\n          getItems()\n            .then((res) => res.json())\n            .then((res) => {\n              const result = res.Result.filter((r) =>\n                r.Name.includes(category)\n              );\n              selectItems(result);\n              resetVoice(`Here is our ${category}`);\n              resetTranscript();\n            });\n        } else if (intent === \"order\") {\n          const name = transcript.substr(\"I want to order\".length);\n          getItems()\n            .then((res) => res.json())\n            .then((res) => {\n              const result = res.Result.filter((r) =>\n                r.Name.toLowerCase().includes(name)\n              );\n              addItemOrder(result[0]);\n            });\n          resetVoice(\"I am listening\");\n          resetTranscript();\n        }\n      });\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};\n"]},"metadata":{},"sourceType":"module"}