{"ast":null,"code":"import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\nconst categories = [\"milk tea\", \"chocolate\", \"oolong\"];\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice\n}) => {\n  const {\n    selectItems\n  } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    if (transcript === \"\") return;\n    getIntent(transcript).then(res => res.json()).then(res => {\n      const {\n        intent\n      } = res;\n      setTimeout(() => {\n        if (intent === \"menu\") {\n          getItems().then(res => res.json()).then(res => selectItems(res.Result));\n          resetVoice(\"Here is our Menu\");\n          resetTranscript();\n        } else if (categories.includes(intent)) {\n          getItems().then(res => res.json()).then(res => {\n            const result = res.Result.filter(r => r.Name.includes(intent));\n            selectItems(result);\n          });\n          resetVoice(`Here is our ${intent}`);\n          resetTranscript();\n        } else if (transcript.startsWith(\"I want to order\")) {\n          const name = transcript.substr(\"I want to order\".length);\n          console.log(name);\n          resetVoice(\"I am listening\");\n        }\n      }, 2000);\n    });\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};","map":{"version":3,"sources":["/Users/thotra/Desktop/hack-gt/src/data/useVoiceCommands.js"],"names":["getItems","getIntent","MessageContext","React","categories","useVoiceCommands","transcript","resetTranscript","resetVoice","selectItems","useContext","useEffect","then","res","json","intent","setTimeout","Result","includes","result","filter","r","Name","startsWith","name","substr","length","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CAAnB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,UAD+B;AAE/BC,EAAAA,eAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAI1B;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAkBN,KAAK,CAACO,UAAN,CAAiBR,cAAjB,CAAxB;AACAC,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,QAAIL,UAAU,KAAK,EAAnB,EAAuB;AACvBL,IAAAA,SAAS,CAACK,UAAD,CAAT,CACGM,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,YAAM;AAAEE,QAAAA;AAAF,UAAaF,GAAnB;AACAG,MAAAA,UAAU,CAAC,MAAM;AACf,YAAID,MAAM,KAAK,MAAf,EAAuB;AACrBf,UAAAA,QAAQ,GACLY,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAASJ,WAAW,CAACI,GAAG,CAACI,MAAL,CAF5B;AAGAT,UAAAA,UAAU,CAAC,kBAAD,CAAV;AACAD,UAAAA,eAAe;AAChB,SAND,MAMO,IAAIH,UAAU,CAACc,QAAX,CAAoBH,MAApB,CAAJ,EAAiC;AAEtCf,UAAAA,QAAQ,GACLY,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,kBAAMM,MAAM,GAAGN,GAAG,CAACI,MAAJ,CAAWG,MAAX,CAAmBC,CAAD,IAC/BA,CAAC,CAACC,IAAF,CAAOJ,QAAP,CAAgBH,MAAhB,CADa,CAAf;AAGAN,YAAAA,WAAW,CAACU,MAAD,CAAX;AACD,WAPH;AAQAX,UAAAA,UAAU,CAAE,eAAcO,MAAO,EAAvB,CAAV;AAEAR,UAAAA,eAAe;AAChB,SAbM,MAaA,IAAID,UAAU,CAACiB,UAAX,CAAsB,iBAAtB,CAAJ,EAA8C;AACnD,gBAAMC,IAAI,GAAGlB,UAAU,CAACmB,MAAX,CAAkB,kBAAkBC,MAApC,CAAb;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAhB,UAAAA,UAAU,CAAC,gBAAD,CAAV;AACD;AACF,OAzBS,EAyBP,IAzBO,CAAV;AA0BD,KA9BH;AA+BD,GAjCD,EAiCG,CAACF,UAAD,EAAaE,UAAb,EAAyBD,eAAzB,EAA0CE,WAA1C,CAjCH;AAkCD,CAxCM","sourcesContent":["import { getItems, getIntent } from \"../apis/ncr\";\nimport { MessageContext } from \"../Context\";\nimport React from \"react\";\n\nconst categories = [\"milk tea\", \"chocolate\", \"oolong\"];\n\nexport const useVoiceCommands = ({\n  transcript,\n  resetTranscript,\n  resetVoice,\n}) => {\n  const { selectItems } = React.useContext(MessageContext);\n  React.useEffect(() => {\n    if (transcript === \"\") return;\n    getIntent(transcript)\n      .then((res) => res.json())\n      .then((res) => {\n        const { intent } = res;\n        setTimeout(() => {\n          if (intent === \"menu\") {\n            getItems()\n              .then((res) => res.json())\n              .then((res) => selectItems(res.Result));\n            resetVoice(\"Here is our Menu\");\n            resetTranscript();\n          } else if (categories.includes(intent)) {\n            \n            getItems()\n              .then((res) => res.json())\n              .then((res) => {\n                const result = res.Result.filter((r) =>\n                  r.Name.includes(intent)\n                );\n                selectItems(result);\n              });\n            resetVoice(`Here is our ${intent}`);\n\n            resetTranscript();\n          } else if (transcript.startsWith(\"I want to order\")) {\n            const name = transcript.substr(\"I want to order\".length);\n            console.log(name);\n            resetVoice(\"I am listening\");\n          }\n        }, 2000);\n      });\n  }, [transcript, resetVoice, resetTranscript, selectItems]);\n};\n"]},"metadata":{},"sourceType":"module"}